@page "/"
@layout MainLayout
@inject IJSRuntime JSRuntime

<div class="container-fluid p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h4 class="mb-0">Projects</h4>
        <button class="btn btn-primary">Create New Project</button>
    </div>

    <div class="row g-4">
        <!-- Project Card -->
        <div class="col-xl-3 col-md-6">
            <div class="card card-green h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="rounded-circle bg-light p-2 me-3">
                            <i class="bi bi-folder text-primary"></i>
                        </div>
                        <h6 class="card-subtitle text-muted">Projects</h6>
                    </div>
                    <h2 class="card-title mb-2">18</h2>
                    <p class="card-text text-muted mb-0">
                        <span class="text-success">2</span> Completed
                    </p>
                </div>
            </div>
        </div>

        <!-- Active Tasks Card -->
        <div class="col-xl-3 col-md-6">
            <div class="card card-blue h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="rounded-circle bg-light p-2 me-3">
                            <i class="bi bi-list-check text-info"></i>
                        </div>
                        <h6 class="card-subtitle text-muted">Active Task</h6>
                    </div>
                    <h2 class="card-title mb-2">132</h2>
                    <p class="card-text text-muted mb-0">
                        <span class="text-success">28</span> Completed
                    </p>
                </div>
            </div>
        </div>

        <!-- Teams Card -->
        <div class="col-xl-3 col-md-6">
            <div class="card card-orange h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="rounded-circle bg-light p-2 me-3">
                            <i class="bi bi-people text-warning"></i>
                        </div>
                        <h6 class="card-subtitle text-muted">Teams</h6>
                    </div>
                    <h2 class="card-title mb-2">12</h2>
                    <p class="card-text text-muted mb-0">
                        <span class="text-success">1</span> Completed
                    </p>
                </div>
            </div>
        </div>

        <!-- Productivity Card -->
        <div class="col-xl-3 col-md-6">
            <div class="card card-red h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="rounded-circle bg-light p-2 me-3">
                            <i class="bi bi-graph-up text-success"></i>
                        </div>
                        <h6 class="card-subtitle text-muted">Productivity</h6>
                    </div>
                    <h2 class="card-title mb-2">76%</h2>
                    <p class="card-text text-muted mb-0">
                        <span class="text-success">5%</span> Completed
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid p-4">
    <!-- Tabla de PM Activos -->
    <div class="card mt-4">
        <div class="card-body">
            <h5 class="card-title mb-4">Active PMs</h5>
            <table class="table table-hover">
                <thead class="table-light">
                    <tr>
                        <th scope="col">Equipment</th>
                        <th scope="col">Type</th>
                        <th scope="col">Technician</th>
                        <th scope="col">Progress</th>
                        <th scope="col">Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var pm in ActivePMs)
                    {
                        <tr>
                            <td>@pm.Equipment</td>
                            <td>@pm.Type</td>
                            <td>@pm.Technician</td>
                            <td>
                                <div class="progress" style="height: 8px;">
                                    <div class="progress-bar" role="progressbar" style="width:@pm.Progress%; background-color:@pm.Color;" aria-valuenow="@pm.Progress" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                <small>@pm.Progress% Complete</small>
                            </td>
                            <td>
                                <span class="badge" style="background-color:@pm.Color;">@pm.Status</span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="container-fluid p-4">
    <div class="row g-4 mt-4">
        <!-- Gráfico tipo Donut -->
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title mb-4">Tasks Performance</h5>
                    <canvas id="donutChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Tabla de Técnicos Activos -->
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title mb-4">Active Technicians</h5>
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">Shift</th>
                                <th scope="col">Duration</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var technician in ActiveTechnicians)
                            {
                                <tr>
                                    <td>@technician.Name</td>
                                    <td>@technician.Shift</td>
                                    <td>@technician.Duration</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private List<ActivePM> ActivePMs = new()
    {
        new ActivePM { Equipment = "CAT D9T", Type = "Short", Technician = "John Doe", Progress = 70, Status = "In Progress", Color = "#198754" },
        new ActivePM { Equipment = "CAT 980H", Type = "Medium", Technician = "Jane Smith", Progress = 40, Status = "Pending", Color = "#ffc107" },
        new ActivePM { Equipment = "CAT D10R", Type = "Long", Technician = "Mike Johnson", Progress = 85, Status = "Finalizing", Color = "#0d6efd" }
    };

    public class ActivePM
    {
        public string Equipment { get; set; } = "";
        public string Type { get; set; } = "";
        public string Technician { get; set; } = "";
        public int Progress { get; set; }
        public string Status { get; set; } = "";
        public string Color { get; set; } = "";
    }

    private List<Technician> ActiveTechnicians = new()
    {
        new Technician { Name = "John Doe", Shift = "Day", Duration = "4h 20m" },
        new Technician { Name = "Jane Smith", Shift = "Day", Duration = "3h 15m" },
        new Technician { Name = "Mike Johnson", Shift = "Night", Duration = "5h 10m" },
        new Technician { Name = "Emily Davis", Shift = "Night", Duration = "2h 50m" }
    };

    public class Technician
    {
        public string Name { get; set; } = "";
        public string Shift { get; set; } = "";
        public string Duration { get; set; } = "";
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("renderDonutChart");
        }
    }
}